@model IEnumerable<BitkiHastalikTahmini.Models.User>
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "abone";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var maxTrials = HttpContextAccessor.HttpContext.Session.GetInt32("MaxTrials") ?? 100;
    var storagePrefix = "abone_"; // Local storage için benzersiz önek
}

<style>
    /* Modern Responsive Design */
    :root {
        --primary-color: #4CAF50;
        --primary-hover: #45a049;
        --secondary-color: #2196F3;
        --text-color: #333;
        --light-text: #f1f1f1;
        --background-light: #f9f9f9;
        --border-radius: 16px;
        --box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease;
    }

    .hero-section {
        text-align: center;
        padding: 40px 20px;
        margin-bottom: 20px;
    }

        .hero-section h1 {
            font-size: 2.5rem;
            color: var(--primary-color);
            margin-bottom: 15px;
        }

        .hero-section p {
            font-size: 1.1rem;
            color: var(--text-color);
            max-width: 700px;
            margin: 0 auto 30px;
            line-height: 1.6;
        }

    .analysis-cards {
        display: flex;
        justify-content: center;
        gap: 30px;
        margin: 40px auto;
        flex-wrap: wrap;
        max-width: 1200px;
    }

    .analysis-card {
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        width: 340px;
        padding: 25px;
        transition: var(--transition);
        position: relative;
        overflow: hidden;
    }

        .analysis-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 28px rgba(0, 0, 0, 0.15);
        }

    .card-icon {
        font-size: 40px;
        color: var(--primary-color);
        margin-bottom: 15px;
    }

    .analysis-card h3 {
        font-size: 1.5rem;
        margin-bottom: 15px;
        color: var(--text-color);
    }

    .analysis-card p {
        color: #666;
        margin-bottom: 25px;
        line-height: 1.5;
    }

    .trial-badge {
        background-color: var(--secondary-color);
        color: white;
        padding: 5px 12px;
        border-radius: 30px;
        font-size: 0.8rem;
        display: inline-block;
        margin-bottom: 20px;
    }

    .analysis-button {
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 30px;
        font-size: 1rem;
        cursor: pointer;
        transition: var(--transition);
        width: 100%;
        font-weight: 500;
    }

        .analysis-button:hover {
            background-color: var(--primary-hover);
        }

        .analysis-button:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }

    /* Modal styling */
    .analysis-modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.7);
        z-index: 1000;
        justify-content: center;
        align-items: center;
        animation: fadeIn 0.3s;
    }

    {
        from

    {
        opacity: 0;
    }

    to {
        opacity: 1;
    }

    }

    {
        from

    {
        transform: translateY(50px);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }

    }

    .modal-content {
        background-color: white;
        border-radius: var(--border-radius);
        width: 90%;
        max-width: 600px;
        max-height: 90vh;
        overflow-y: auto;
        box-shadow: var(--box-shadow);
        position: relative;
        animation: slideUp 0.4s;
    }

    .modal-header {
        padding: 20px 25px;
        border-bottom: 1px solid #eee;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .modal-header h2 {
            margin: 0;
            color: var(--primary-color);
            font-size: 1.7rem;
        }

    .close-button {
        background: transparent;
        border: none;
        font-size: 24px;
        color: #666;
        cursor: pointer;
        transition: var(--transition);
    }

        .close-button:hover {
            color: #f44336;
            transform: scale(1.1);
        }

    .modal-body {
        padding: 25px;
    }

    /* Form styling */
    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--text-color);
        }

    .form-control {
        width: 100%;
        padding: 12px 15px;
        border: 1px solid #ddd;
        border-radius: 8px;
        font-size: 1rem;
        transition: var(--transition);
    }

        .form-control:focus {
            border-color: var(--primary-color);
            outline: none;
            box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.2);
        }

    .form-text {
        font-size: 0.8rem;
        color: #777;
        margin-top: 5px;
    }

    .btn-submit {
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 14px;
        border-radius: 8px;
        font-size: 1.1rem;
        cursor: pointer;
        width: 100%;
        transition: var(--transition);
        font-weight: 500;
        margin-top: 10px;
    }

        .btn-submit:hover {
            background-color: var(--primary-hover);
        }

    /* Loading indicator */
    .loading-indicator {
        display: none;
        text-align: center;
        margin: 20px 0;
    }

    .spinner {
        border: 4px solid rgba(0, 0, 0, 0.1);
        border-radius: 50%;
        border-left: 4px solid var(--primary-color);
        width: 30px;
        height: 30px;
        animation: spin 1s linear infinite;
        margin: 0 auto 10px;
    }

    {
        0%

    {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }

    }

    /* Results styling */
    .results-container {
        max-width: 900px;
        margin: 40px auto;
        animation: fadeIn 0.5s;
    }

    .result-card {
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        overflow: hidden;
    }

    .result-header {
        padding: 20px;
        color: white;
    }

    .success-header {
        background-color: var(--primary-color);
    }

    .error-header {
        background-color: #f44336;
    }

    .result-body {
        padding: 25px;
    }

    .result-alert {
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 25px;
    }

    .success-alert {
        background-color: rgba(76, 175, 80, 0.1);
        border: 1px solid rgba(76, 175, 80, 0.3);
    }

    .error-alert {
        background-color: rgba(244, 67, 54, 0.1);
        border: 1px solid rgba(244, 67, 54, 0.3);
    }

    .info-section {
        background-color: rgba(33, 150, 243, 0.1);
        border-radius: 8px;
        padding: 15px;
        margin-top: 20px;
    }

    .badge {
        display: inline-block;
        padding: 5px 12px;
        border-radius: 30px;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .info-badge {
        background-color: var(--secondary-color);
        color: white;
    }

    .warning-badge {
        background-color: #ff9800;
        color: white;
    }

    /* Image upload styling */
    .image-upload {
        border: 2px dashed #ddd;
        padding: 20px;
        text-align: center;
        border-radius: 8px;
        margin-bottom: 20px;
        cursor: pointer;
        transition: var(--transition);
    }

        .image-upload:hover {
            border-color: var(--primary-color);
        }

    .image-preview {
        max-width: 100%;
        max-height: 300px;
        margin: 15px auto;
        display: none;
        border-radius: 8px;
        overflow: hidden;
    }

        .image-preview img {
            max-width: 100%;
            max-height: 300px;
            object-fit: contain;
        }

    /* Responsive adjustments */
    {
        .hero-section h1

    {
        font-size: 2rem;
    }

    .analysis-card {
        width: 100%;
        max-width: 400px;
    }

    .modal-content {
        width: 95%;
    }

    }

    /* Deneme hakları sıfırlama butonu */
    .reset-trials {
        text-align: center;
        margin: 20px auto;
        max-width: 300px;
    }

    .reset-button {
        background-color: var(--secondary-color);
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 30px;
        font-size: 0.9rem;
        cursor: pointer;
        transition: var(--transition);
    }

        .reset-button:hover {
            background-color: #1976D2;
        }
</style>

<div class="hero-section">
    <h1>Bitki Hastalık Tahmini</h1>
    <p>Toprak değerlerinizi analiz ederek size uygun bitki önerisi alın veya görüntü yükleyerek bitki hastalığı tespiti yapın.</p>
</div>

<div class="analysis-cards">
    <div class="analysis-card">
        <div class="card-icon">🌱</div>
        <h3>Toprak Analizi</h3>
        <p>Azot, fosfor, potasyum ve pH değerlerini girerek toprağınıza uygun bitki önerisi alın.</p>
        <div class="trial-badge">
            <span id="soilTrialsLeft">@maxTrials</span> analiz hakkınız kaldı
        </div>
        <button class="analysis-button" id="soilButton" onclick="toggleModal('soil')">Analiz Başlat</button>
    </div>

    <div class="analysis-card">
        <div class="card-icon">📷</div>
        <h3>Görüntü ile Hastalık Tespiti</h3>
        <p>Bitki fotoğrafı yükleyerek hastalık analizi yapın ve tedavi önerileri alın.</p>
        <div class="trial-badge">
            <span id="imageTrialsLeft">@maxTrials</span> analiz hakkınız kaldı
        </div>
        <button class="analysis-button" id="imageButton" onclick="toggleModal('image')">Analiz Başlat</button>
    </div>
</div>

<!-- Hakları sıfırla butonu -->
<div class="reset-trials">
    <button class="reset-button" onclick="resetTrials()">Deneme Haklarını Sıfırla</button>
</div>

<!-- Toprak Analizi Modal -->
<div id="soilModal" class="analysis-modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2>Toprak Analizi</h2>
            <button class="close-button" onclick="toggleModal('soil')">&times;</button>
        </div>
        <div class="modal-body">
            <form asp-action="AnalyzeSoil" asp-controller="Abone" method="post" id="soilForm">
                <div class="form-group">
                    <label for="azot">Azot Değeri (ppm):</label>
                    <input type="number" step="0.1" min="0" name="azot" id="azot" class="form-control" placeholder="Azot değerini girin" required>
                </div>
                <div class="form-group">
                    <label for="fosfor">Fosfor Değeri (ppm):</label>
                    <input type="number" step="0.1" min="0" name="fosfor" id="fosfor" class="form-control" placeholder="Fosfor değerini girin" required>
                </div>
                <div class="form-group">
                    <label for="potasyum">Potasyum Değeri (ppm):</label>
                    <input type="number" step="0.1" min="0" name="potasyum" id="potasyum" class="form-control" placeholder="Potasyum değerini girin" required>
                </div>
                <div class="form-group">
                    <label for="ph">pH Değeri:</label>
                    <input type="number" step="0.1" min="0" max="14" name="ph" id="ph" class="form-control" placeholder="6.0-8.0 arası bir değer girin" required>
                </div>
                <div class="form-group">
                    <label for="il">İl Seçin:</label>
                    <select name="il" id="il" class="form-control" required>
                        <option value="">İl Seçiniz</option>
                        @foreach (var city in ViewBag.Cities)
                        {
                            <option value="@city">@city</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="ay">Ay Seçin:</label>
                    <select name="ay" id="ay" class="form-control" required>
                        <option value="">Ay Seçiniz</option>
                        @for (int i = 1; i <= 12; i++)
                        {
                            <option value="@i">@ViewBag.Months[i - 1]</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="apiUrl">API Sunucu URL:</label>
                    <input type="text" name="apiUrl" id="apiUrl" class="form-control" placeholder="API URL adresini girin" value="http://10.10.8.103:5000" required>
                    <div class="form-text">Örnek: http://10.10.8.103:5000 veya https://example.com</div>
                </div>

                <div class="loading-indicator" id="soil-loading-indicator">
                    <div class="spinner"></div>
                    <p>Analiz yapılıyor, lütfen bekleyin...</p>
                </div>

                <button type="submit" class="btn-submit" id="soil-submit-btn">Analiz Et</button>

                <!-- Hidden field to track trial usage -->
                <input type="hidden" name="trialCount" id="soilTrialCount" value="0">
            </form>
        </div>
    </div>
</div>

<!-- Görüntü Analizi Modal -->
<div id="imageModal" class="analysis-modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2>Görüntü ile Hastalık Tespiti</h2>
            <button class="close-button" onclick="toggleModal('image')">&times;</button>
        </div>
        <div class="modal-body">
            <form asp-action="AnalyzeImage" asp-controller="Abone" method="post" id="imageForm" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="plantImage">Bitki Görüntüsü:</label>
                    <div class="image-upload" id="image-upload-area" onclick="triggerFileInput()">
                        <p id="upload-text">Görüntü yüklemek için tıklayın veya sürükleyin</p>
                        <input type="file" name="plantImage" id="plantImage" class="form-control" style="display: none;" accept="image/*" required>
                        <div class="image-preview" id="image-preview">
                            <img id="preview-img" src="#" alt="Bitki görüntüsü önizlemesi">
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="imageApiUrl">API Sunucu URL:</label>
                    <input type="text" name="apiUrl" id="imageApiUrl" class="form-control" placeholder="API URL adresini girin" value="http://10.10.8.103:5000" required>
                    <div class="form-text">Örnek:http://10.10.8.103:5000 veya https://example.com</div>
                </div>

                <div class="loading-indicator" id="image-loading-indicator">
                    <div class="spinner"></div>
                    <p>Analiz yapılıyor, lütfen bekleyin...</p>
                </div>

                <button type="submit" class="btn-submit" id="image-submit-btn">Analiz Et</button>

                <!-- Hidden field to track trial usage -->
                <input type="hidden" name="trialCount" id="imageTrialCount" value="0">
            </form>
        </div>
    </div>
</div>

<!-- Analiz Sonuçları -->
<div class="results-container" id="results-container">
    @if (ViewBag.ShowResults == true)
    {
        <div class="result-card">
            <div class="result-header @(ViewBag.ResultCrop == "Hata" ? "error-header" : "success-header")">
                <h2 style="text-align: center; margin: 0;">@(ViewBag.AnalysisType == "image" ? "Görüntü Analizi Sonucu" : "Toprak Analizi Sonucu")</h2>
            </div>
            <div class="result-body">
                <div class="result-alert @(ViewBag.ResultCrop == "Hata" ? "error-alert" : "success-alert")">
                    <h4 style="text-align: center; margin-top: 0;">@(ViewBag.AnalysisType == "image" ? "Tespit Edilen Hastalık" : "Tavsiye Edilen Bitki/Ürün")</h4>
                    <h3 style="text-align: center; margin-bottom: 20px;"><strong>@ViewBag.ResultCrop</strong></h3>
                    <hr style="border-top: 1px solid rgba(0,0,0,0.1); margin: 15px 0;">
                    <p style="margin-bottom: 0;">@ViewBag.Explanation</p>
                </div>

                <div style="display: flex; flex-wrap: wrap; margin-top: 20px; gap: 20px;">
                    <div style="flex: 1; min-width: 250px;">
                        <div class="info-section">
                            <h5 style="margin-top: 0;">Analiz Güven Oranı</h5>
                            @if (ViewBag.Confidence != null)
                            {
                                <span class="badge info-badge">%@(Math.Round((double)ViewBag.Confidence * 100, 2))</span>
                            }
                            else
                            {
                                <span class="badge warning-badge">Veri Yok</span>
                            }
                        </div>
                    </div>

                    @if (ViewBag.AnalysisType == "image" && ViewBag.ImageData != null)
                    {
                        <div style="flex: 1; min-width: 250px;">
                            <div class="info-section">
                                <h5 style="margin-top: 0;">Analiz Edilen Görüntü</h5>
                                <img src="data:image/jpeg;base64,@ViewBag.ImageData" alt="Analiz edilen bitki görüntüsü" style="max-width: 100%; border-radius: 8px; margin-top: 10px;">
                            </div>
                        </div>
                    }
                </div>

                <div style="text-align: center; margin-top: 30px;">
                    <button class="analysis-button" onclick="toggleModal('@(ViewBag.AnalysisType == "image" ? "image" : "soil")')" style="max-width: 200px;">Yeni Analiz Yap</button>
                </div>
            </div>

            <div style="background-color: #f9f9f9; padding: 15px; text-align: center; border-top: 1px solid #eee;">
                <div style="color: #777; font-size: 0.9rem;">
                    Bu analiz Dr.PlantAI yapay zeka sistemi tarafından gerçekleştirilmiştir.
                    Daha detaylı bilgi için uzman bir ziraat mühendisi ile iletişime geçebilirsiniz.
                </div>
            </div>
        </div>
    }
</div>

<script>
    // Kullanıcının deneme haklarını local storage'da saklayacağız
    document.addEventListener('DOMContentLoaded', function() {
        // Local storage'dan deneme haklarını kontrol et
        let soilTrials = localStorage.getItem('@storagePrefix'+'soilTrials');
        let imageTrials = localStorage.getItem('@storagePrefix'+'imageTrials');

        // Eğer daha önce kullanılmamışsa, session'dan gelen değeri kullan
        let maxTrials = @maxTrials;
        
        if (soilTrials === null) {
            localStorage.setItem('@storagePrefix'+'soilTrials', maxTrials);
            soilTrials = maxTrials;
        }
        
        if (imageTrials === null) {
            localStorage.setItem('@storagePrefix'+'imageTrials', maxTrials);
            imageTrials = maxTrials;
        }

        // Kalan hakları göster
        updateTrialDisplay();

        // Deneme hakkı kalmadıysa butonları devre dışı bırak
        checkTrialAvailability();

        // Toprak form gönderimini yönet
        const soilForm = document.getElementById('soilForm');
        if (soilForm) {
            soilForm.addEventListener('submit', function(e) {
                // Eğer deneme hakkı kalmadıysa formu gönderme
                if (parseInt(localStorage.getItem('@storagePrefix'+'soilTrials')) <= 0) {
                    e.preventDefault();
                    alert('Deneme hakkınız kalmadı!');
                    return false;
                }

                // Loading göstergesini aktifleştir
                document.getElementById('soil-loading-indicator').style.display = 'block';
                document.getElementById('soil-submit-btn').disabled = true;

                // Deneme hakkını azalt
                let remainingTrials = parseInt(localStorage.getItem('@storagePrefix'+'soilTrials')) - 1;
                localStorage.setItem('@storagePrefix'+'soilTrials', remainingTrials);

                // Deneme sayısını form ile gönder
                document.getElementById('soilTrialCount').value = @maxTrials - remainingTrials;

                // Form normal şekilde gönderilecek
                return true;
            });
        }

        // Görüntü form gönderimini yönet
        const imageForm = document.getElementById('imageForm');
        if (imageForm) {
            imageForm.addEventListener('submit', function(e) {
                // Eğer deneme hakkı kalmadıysa formu gönderme
                if (parseInt(localStorage.getItem('@storagePrefix'+'imageTrials')) <= 0) {
                    e.preventDefault();
                    alert('Deneme hakkınız kalmadı!');
                    return false;
                }

                // Dosya seçilmediyse form gönderimini engelle
                const fileInput = document.getElementById('plantImage');
                if (!fileInput.files.length) {
                    e.preventDefault();
                    alert('Lütfen bir görüntü seçin!');
                    return false;
                }

                // Loading göstergesini aktifleştir
                document.getElementById('image-loading-indicator').style.display = 'block';
                document.getElementById('image-submit-btn').disabled = true;

                // Deneme hakkını azalt
                let remainingTrials = parseInt(localStorage.getItem('@storagePrefix'+'imageTrials')) - 1;
                localStorage.setItem('@storagePrefix'+'imageTrials', remainingTrials);

                // Deneme sayısını form ile gönder
                document.getElementById('imageTrialCount').value = @maxTrials - remainingTrials;

                // Form normal şekilde gönderilecek
                return true;
            });
        }

        // Görüntü yükleme önizlemesi
        const fileInput = document.getElementById('plantImage');
        if (fileInput) {
            fileInput.addEventListener('change', function() {
                previewImage(this);
            });
        }

        // Görüntü için sürükle-bırak desteği
        const dropArea = document.getElementById('image-upload-area');
        if (dropArea) {
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, preventDefaults, false);
            });

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, unhighlight, false);
            });

            function highlight() {
                dropArea.style.borderColor = '#4CAF50';
                dropArea.style.backgroundColor = 'rgba(76, 175, 80, 0.1)';
            }

            function unhighlight() {
                dropArea.style.borderColor = '#ddd';
                dropArea.style.backgroundColor = '';
            }

            dropArea.addEventListener('drop', handleDrop, false);

            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;

                if (files.length) {
                    const fileInput = document.getElementById('plantImage');
                    fileInput.files = files;
                    previewImage(fileInput);
                }
            }
        }

        // Analiz sonuçları varsa otomatik olarak sayfayı kaydır
    @if (ViewBag.ShowResults == true)
    {
        <text>
                        setTimeout(() => {
                            const resultElement = document.getElementById('results-container');
                            if (resultElement) {
                                resultElement.scrollIntoView({ behavior: 'smooth' });
                            }
                        }, 500);

                        // Eğer analiz sonucu başarılıysa hakları güncelle
                        updateTrialDisplay();
                        checkTrialAvailability();
        </text>
    }
    });

    // Modal açma/kapama fonksiyonu
        function toggleModal(type) {
        const modal = document.getElementById(type + 'Modal');

        if (modal.style.display === 'flex') {
            modal.style.display = 'none';
            document.body.style.overflow = '';
        } else {
            modal.style.display = 'flex';
            document.body.style.overflow = 'hidden';
        }
    }

    // Dosya seçme diyaloğunu tetikle
    function triggerFileInput() {
        document.getElementById('plantImage').click();
    }

    // Görüntü önizleme fonksiyonu
    function previewImage(input) {
        const preview = document.getElementById('image-preview');
        const previewImg = document.getElementById('preview-img');
        const uploadText = document.getElementById('upload-text');

        if (input.files && input.files[0]) {
            const reader = new FileReader();

            reader.onload = function(e) {
                previewImg.src = e.target.result;
                preview.style.display = 'block';
                uploadText.textContent = 'Görüntüyü değiştirmek için tıklayın';
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    // Modal dışına tıklandığında kapatma
    window.addEventListener('click', function(e) {
        if (e.target.classList.contains('analysis-modal')) {
            e.target.style.display = 'none';
             document.body.style.overflow = '';
        }
    });

    // Deneme haklarını güncelleme fonksiyonu
    function updateTrialDisplay() {
        const soilTrialsElement = document.getElementById('soilTrialsLeft');
        const imageTrialsElement = document.getElementById('imageTrialsLeft');

        if (soilTrialsElement) {
            soilTrialsElement.textContent = localStorage.getItem('@storagePrefix'+'soilTrials') || 0;
        }
        if (imageTrialsElement) {
            imageTrialsElement.textContent = localStorage.getItem('@storagePrefix'+'imageTrials') || 0;
        }
    }

    // Deneme hakkı kontrolü
    function checkTrialAvailability() {
        const soilButton = document.getElementById('soilButton');
        const imageButton = document.getElementById('imageButton');

        // Toprak analizi butonunu kontrol et
        if (soilButton) {
            if (parseInt(localStorage.getItem('@storagePrefix'+'soilTrials')) <= 0) {
                soilButton.disabled = true;
                soilButton.textContent = 'Deneme Hakkınız Bitti';
            } else {
                soilButton.disabled = false;
                soilButton.textContent = 'Analiz Başlat';
            }
        }

        // Görüntü analizi butonunu kontrol et
        if (imageButton) {
            if (parseInt(localStorage.getItem('@storagePrefix'+'imageTrials')) <= 0) {
                imageButton.disabled = true;
                imageButton.textContent = 'Deneme Hakkınız Bitti';
            } else {
                imageButton.disabled = false;
                imageButton.textContent = 'Analiz Başlat';
            }
        }
    }

    // Deneme haklarını sıfırlama fonksiyonu
    function resetTrials() {
        let maxTrials = @maxTrials;
        localStorage.setItem('@storagePrefix'+'soilTrials', maxTrials);
        localStorage.setItem('@storagePrefix'+'imageTrials', maxTrials);
        updateTrialDisplay();
        checkTrialAvailability();
        alert('Deneme haklarınız sıfırlandı!');
    }
</script>